****************************************MINISHELL*********************************************
execve : execve() executes the program pointed to by filename. filename must be either a binary executable, or a script;


fork: creer de nouveaux processus
    un appel de fork = un proc pere + un proc fils

wait
    Asks th parent wait for the child proc to finish
    If only one child process is terminated, then return a wait() returns process ID of the terminated child process.
    If more than one child processes are terminated than wait() reap any arbitrarily child and return a process ID of that child process.
    When wait() returns they also define exit status
    If any process has no child process then wait() returns immediately “-1”.

main 
    while 1
        * write prompt;
        * copy env variables in a char **"tab_env" = `global variable`
        * if getnextline(fd = 0, &buffer) >= 0 => command + args stored in a "string" buffer
            * split the resulted "string" and store it in a matrix "char** cmd"
            * check if the first string of the matrix is valid command:
                cmd[0] == ls
                    execve(/bin/ls, cmd, tab_env);
                cmd[0] == cd
                    implement cd with opendir + access;
                cmd[0] == echo
                    implement echo with write;
                cmd[0] == setenv
                    modify the tab_env;
                cmd[0] == unsetenv
                    modify the tab_env
                cmd[0] == env
                    print the tab_env
                cmd[0] == exit
                    exit;

